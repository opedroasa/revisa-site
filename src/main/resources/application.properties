spring.application.name=site

# === Banco ===
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/revisa_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:revisa_user}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:Ub3rl@nd1@}
spring.datasource.driver-class-name=org.postgresql.Driver

# === JPA / Hibernate ===
# Cria/ajusta as tabelas automaticamente (simples)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# === data.sql ===
# Garante execução do data.sql em qualquer ambiente e só depois do schema estar pronto
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# === Flyway ===
# Desliga por enquanto (vamos usar data.sql). Se ligar depois, beleza.
spring.flyway.enabled=false

# === Cloudinary ===
cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME:ddj0hfvsb}
cloudinary.api_key=${CLOUDINARY_API_KEY:512336614341896}
cloudinary.api_secret=${CLOUDINARY_API_SECRET:On1C-gDORdV8A4rxz0LWN2pBU4s}

# === Logs ===
logging.level.root=INFO
# Se quiser arquivo no DEV e nada no Render:
logging.file.name=${LOG_FILE_NAME:logs/revisacaminhoes.log}
# logs/revisacaminhoes.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=50

# Porta do Render (usa $PORT se existir)
server.port=${PORT:8080}
# Inicialização preguiçosa ajuda o Tomcat subir rápido e liberar a porta antes
spring.main.lazy-initialization=true

# Pool menor (menos memória)
spring.datasource.hikari.maximum-pool-size=3
spring.datasource.hikari.minimum-idle=1
